{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\ReactJS\\\\GoFood\\\\gofood\\\\src\\\\components\\\\ContextReducer.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartStateContext = /*#__PURE__*/createContext();\nconst CartDispatchContext = /*#__PURE__*/createContext();\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD\":\n      return [...state, {\n        id: action.id,\n        name: action.name,\n        qty: action.qty,\n        size: action.size,\n        price: action.price,\n        img: action.img\n      }];\n    case \"REMOVE\":\n      let newArr = [...state];\n      newArr.splice(action.index, 1);\n      return newArr;\n    case \"UPDATE\":\n      let arr = [...state];\n      arr.find((food, index) => {\n        if (food.id === action.id) {\n          arr[index] = {\n            ...food,\n            qty: parseInt(action.qty) + food.qty,\n            price: action.price + food.price\n          };\n        }\n        return arr;\n      });\n      return arr;\n    default:\n      console.log(\"error in reducer\");\n  }\n};\nexport const CartProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(reducer, []);\n  return /*#__PURE__*/_jsxDEV(CartDispatchContext.Provider, {\n    value: dispatch,\n    children: /*#__PURE__*/_jsxDEV(CartStateContext.Provider, {\n      value: state,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"hqbLHcuPp8rcu0XQW411A7H6uMw=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  return useContext(CartStateContext);\n};\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const useDispatchCart = () => {\n  _s3();\n  return useContext(CartDispatchContext);\n};\n_s3(useDispatchCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","jsxDEV","_jsxDEV","CartStateContext","CartDispatchContext","reducer","state","action","type","id","name","qty","size","price","img","newArr","splice","index","arr","find","food","parseInt","console","log","CartProvider","_ref","_s","children","dispatch","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","useDispatchCart","_s3","$RefreshReg$"],"sources":["D:/Projects/ReactJS/GoFood/gofood/src/components/ContextReducer.js"],"sourcesContent":["import React, {createContext, useContext ,useReducer} from 'react'\r\n\r\nconst CartStateContext=createContext();\r\nconst CartDispatchContext= createContext();\r\n\r\nconst reducer=(state,action)=>{\r\n    switch(action.type){\r\n        case \"ADD\":\r\n            return [...state,{id:action.id ,name:action.name,qty:action.qty,size:action.size,price:action.price,img:action.img}]\r\n        case \"REMOVE\":\r\n            let newArr=[...state]\r\n            newArr.splice(action.index,1)\r\n            return newArr; \r\n            \r\n        \r\n        case \"UPDATE\":\r\n            let arr=[...state]\r\n            arr.find((food,index)=>{\r\n                if(food.id===action.id){\r\n                    arr[index]={...food,qty:parseInt(action.qty)+food.qty,price: action.price + food.price}\r\n                }\r\n                return arr;\r\n            })\r\n            return arr ;\r\n            default:\r\n            console.log(\"error in reducer\")\r\n    }\r\n}\r\n\r\nexport const CartProvider=({children})=>{\r\n   const[state,dispatch]=useReducer(reducer,[])\r\n\r\n   return (\r\n    <CartDispatchContext.Provider value={dispatch}>\r\n        <CartStateContext.Provider value={state}>\r\n            {children}\r\n        </CartStateContext.Provider>\r\n    </CartDispatchContext.Provider>\r\n   );\r\n};\r\n\r\nexport  const useCart=()=>useContext(CartStateContext);\r\nexport const useDispatchCart=()=>useContext(CartDispatchContext);"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAGC,aAAa,EAAEC,UAAU,EAAEC,UAAU,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,gBAAgB,gBAACL,aAAa,CAAC,CAAC;AACtC,MAAMM,mBAAmB,gBAAEN,aAAa,CAAC,CAAC;AAE1C,MAAMO,OAAO,GAACA,CAACC,KAAK,EAACC,MAAM,KAAG;EAC1B,QAAOA,MAAM,CAACC,IAAI;IACd,KAAK,KAAK;MACN,OAAO,CAAC,GAAGF,KAAK,EAAC;QAACG,EAAE,EAACF,MAAM,CAACE,EAAE;QAAEC,IAAI,EAACH,MAAM,CAACG,IAAI;QAACC,GAAG,EAACJ,MAAM,CAACI,GAAG;QAACC,IAAI,EAACL,MAAM,CAACK,IAAI;QAACC,KAAK,EAACN,MAAM,CAACM,KAAK;QAACC,GAAG,EAACP,MAAM,CAACO;MAAG,CAAC,CAAC;IACxH,KAAK,QAAQ;MACT,IAAIC,MAAM,GAAC,CAAC,GAAGT,KAAK,CAAC;MACrBS,MAAM,CAACC,MAAM,CAACT,MAAM,CAACU,KAAK,EAAC,CAAC,CAAC;MAC7B,OAAOF,MAAM;IAGjB,KAAK,QAAQ;MACT,IAAIG,GAAG,GAAC,CAAC,GAAGZ,KAAK,CAAC;MAClBY,GAAG,CAACC,IAAI,CAAC,CAACC,IAAI,EAACH,KAAK,KAAG;QACnB,IAAGG,IAAI,CAACX,EAAE,KAAGF,MAAM,CAACE,EAAE,EAAC;UACnBS,GAAG,CAACD,KAAK,CAAC,GAAC;YAAC,GAAGG,IAAI;YAACT,GAAG,EAACU,QAAQ,CAACd,MAAM,CAACI,GAAG,CAAC,GAACS,IAAI,CAACT,GAAG;YAACE,KAAK,EAAEN,MAAM,CAACM,KAAK,GAAGO,IAAI,CAACP;UAAK,CAAC;QAC3F;QACA,OAAOK,GAAG;MACd,CAAC,CAAC;MACF,OAAOA,GAAG;IACV;MACAI,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;EACvC;AACJ,CAAC;AAED,OAAO,MAAMC,YAAY,GAACC,IAAA,IAAc;EAAAC,EAAA;EAAA,IAAb;IAACC;EAAQ,CAAC,GAAAF,IAAA;EAClC,MAAK,CAACnB,KAAK,EAACsB,QAAQ,CAAC,GAAC5B,UAAU,CAACK,OAAO,EAAC,EAAE,CAAC;EAE5C,oBACCH,OAAA,CAACE,mBAAmB,CAACyB,QAAQ;IAACC,KAAK,EAAEF,QAAS;IAAAD,QAAA,eAC1CzB,OAAA,CAACC,gBAAgB,CAAC0B,QAAQ;MAACC,KAAK,EAAExB,KAAM;MAAAqB,QAAA,EACnCA;IAAQ;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACc;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEnC,CAAC;AAACR,EAAA,CAVWF,YAAY;AAAAW,EAAA,GAAZX,YAAY;AAYzB,OAAQ,MAAMY,OAAO,GAACA,CAAA;EAAAC,GAAA;EAAA,OAAItC,UAAU,CAACI,gBAAgB,CAAC;AAAA;AAACkC,GAAA,CAAzCD,OAAO;AACrB,OAAO,MAAME,eAAe,GAACA,CAAA;EAAAC,GAAA;EAAA,OAAIxC,UAAU,CAACK,mBAAmB,CAAC;AAAA;AAACmC,GAAA,CAApDD,eAAe;AAAA,IAAAH,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}